/////////////////////////////////////////////////////////////////////////////
// Name:        crumbsviewer_frame.h
// Purpose:     
// Author:      RAGO
// Modified by: 
// Created:     Sat 22 Mar 18:48:22 2014
// RCS-ID:      
// Copyright:   (C) 2014 crumbssoftware.com
// Licence:     
/////////////////////////////////////////////////////////////////////////////

// Generated by DialogBlocks (Personal Edition), Sat 22 Mar 18:48:22 2014

#ifndef _CRUMBSVIEWER_FRAME_H_
#define _CRUMBSVIEWER_FRAME_H_


/*!
 * Includes
 */

////@begin includes
#include "wx/frame.h"
////@end includes

#include <wx/docview.h>
#include <wx/webview.h>
#include <vector>
#include "CRsystemUtils.h"
#include "sqlite3.h"

#include "cvsearchhelp_frame.h"

//##INI File stuff
#define INI_FILE wxT("crumbs2.ini")
#define APPLICATION_NAME wxT("CRUMBS Document Viewer")

#define INI_KEY_TABLE_COUNT wxT("/GENERAL/TableCount")
#define INI_KEY_DATABASE_FILE wxT("/GENERAL/DatabaseFile")



//per group info
#define INI_TABLE_ROOT wxT("TABLE")
#define INI_TABLE_NAME   wxT("TableName")
#define INI_TABLE_PATH_PDF   wxT("PathPDF")
#define INI_TABLE_PATH_TXT   wxT("PathTXT")
#define INI_TABLE_DOC_ROOT   wxT("DocumentRoot")
#define INI_TABLE_DATABASE_TABLE_NAME  wxT("DBtable")


#define INI_UPDATE_ROOT wxT("UPDATE")
#define INI_UPDATE_FILE wxT("filename")

#define CRUMBS_VIEWER_VERSION_MAJOR 2
#define CRUMBS_VIEWER_VERSION_MINOR 5

#define CRUMBS_VIEWER_VERSION_REVISION_MAC 3
#define CRUMBS_VIEWER_VERSION_REVISION_WIN 3



//to hold info for tables, pdf location, etc
class CVTable
{
public:
    CVTable():m_nDocumentFirst(0),m_nDocumentLast(0) {  };
    ~CVTable() { };
    

    file_element * pGetFileInfoPDF(long nIndex);
    file_element * pGetFileInfoTXT(long nIndex);
    
    void vSetCurrent(long lNewValue, bool bRelative);
    
    wxString xsTableName;
    wxString xsPathPDF;
    wxString xsPathTXT;
    wxString xsDBTable;
    wxString xsDocRoot;
    long m_nDocumentFirst;
    long m_nDocumentLast;
    
    long m_nDocumentCurrent;
    
    std::vector<file_element> m_vFilesPDF;
    std::vector<file_element> m_vFilesTXT;
};

struct collection_item
{
    long lIndex;
    int  nTable;
};

class CVCollection
{
public:
    CVCollection() { vClear(); }
    ~CVCollection() { }
    
    void vClear();
    bool bAddItem(collection_item & tItem);
    bool bSetTableTo(int nNewTable, bool bOnlyMissing=true);
    
    collection_item * pGetItem(int nIndex);
    int nGetSize() { return m_vItems.size(); }
    
    std::string sToString();
    void vInitFromString(std::string & sInput);
    
    
    //add and keep sorted?
    //sort
    //make unique
    std::string m_sComment;
    
    std::vector<collection_item> m_vItems;
    
};

/*!
 * Forward declarations
 */

////@begin forward declarations
class wxWebView;
////@end forward declarations

/*!
 * Control identifiers
 */

////@begin control identifiers
#define ID_CRUMBSVIEWER_FRAME 10000
#define ID_CRUMBS_BUTTON_SEARCH_HELP 10023
#define ID_CRUMBS_TEXT_SEARCH 10011
#define ID_CRUMBS_BUTTON_CLEAR_SEARCH 10014
#define ID_CRUMBS_BUTTON_SEARCH 10013
#define ID_CRUMBS_BUTTON_ALL_SEARCH_TABLES 10026
#define ID_CRUMBS_BUTTON_CLEAR_SEARCH_TABLES 10025
#define ID_CRUMBS_CHECKLISTBOX_SEARCH_DB 10024
#define ID_CRUMBS_COMBO_SEARCH_LIMIT 10010
#define ID_CRUMBS_COMBO_PREVIOUS_SEARCH 10020
#define ID_CRUMBS_TEXT_COLLECTION_COMMENT 10022
#define ID_CRUMBS_LISTBOX_COLLECTION 10015
#define ID_CRUMBS_BUTTON_RESULTS_FIRST 10016
#define ID_CRUMBS_BUTTON_RESULTS_PREV 10017
#define ID_CRUMBS_BUTTON_RESULTS_NEXT 10018
#define ID_CRUMBS_BUTTON_RESULTS_LAST 10019
#define ID_CRUMBS_BUTTON_VIEW_FIRST 10002
#define ID_CRUMBS_BUTTON_VIEW_PREV 10003
#define ID_TEXTCTRL 10004
#define ID_CRUMBS_BUTTON_VIEW_NEXT 10005
#define ID_CRUMBS_BUTTON_VIEW_LAST 10006
#define ID_COMBOBOX 10007
#define ID_CRUMBS_BUTTON_TEST 10021
#define ID_CRUMBS_WEB_VIEW 10001
#define ID_CRUMBS_MENU_DATABASE_BUILD_DB 10009
#define ID_CRUMBS_MENU_DATABASE_CREATE_PACKAGE 10030
#define ID_CRUMBS_MENU_DATABASE_LOAD_UPDATE 10031
#define ID_MENUITEM_SEARCH_HELP 10008
#define ID_MENUITEM_FILETOOLS_LIST_CONSECUTIVE 10032
#define SYMBOL_CRUMBSVIEWER_FRAME_STYLE wxCAPTION|wxRESIZE_BORDER|wxSYSTEM_MENU|wxMINIMIZE_BOX|wxMAXIMIZE_BOX|wxCLOSE_BOX|wxFULL_REPAINT_ON_RESIZE
#define SYMBOL_CRUMBSVIEWER_FRAME_TITLE _("CrumbsViewer_Frame")
#define SYMBOL_CRUMBSVIEWER_FRAME_IDNAME ID_CRUMBSVIEWER_FRAME
#define SYMBOL_CRUMBSVIEWER_FRAME_SIZE wxSize(400, 300)
#define SYMBOL_CRUMBSVIEWER_FRAME_POSITION wxDefaultPosition
////@end control identifiers


/*!
 * CrumbsViewer_Frame class declaration
 */

class CrumbsViewer_Frame: public wxFrame
{    
    DECLARE_CLASS( CrumbsViewer_Frame )
    DECLARE_EVENT_TABLE()

public:
    /// Constructors
    CrumbsViewer_Frame();
    CrumbsViewer_Frame( wxWindow* parent, wxWindowID id = SYMBOL_CRUMBSVIEWER_FRAME_IDNAME, const wxString& caption = SYMBOL_CRUMBSVIEWER_FRAME_TITLE, const wxPoint& pos = SYMBOL_CRUMBSVIEWER_FRAME_POSITION, const wxSize& size = SYMBOL_CRUMBSVIEWER_FRAME_SIZE, long style = SYMBOL_CRUMBSVIEWER_FRAME_STYLE );

    bool Create( wxWindow* parent, wxWindowID id = SYMBOL_CRUMBSVIEWER_FRAME_IDNAME, const wxString& caption = SYMBOL_CRUMBSVIEWER_FRAME_TITLE, const wxPoint& pos = SYMBOL_CRUMBSVIEWER_FRAME_POSITION, const wxSize& size = SYMBOL_CRUMBSVIEWER_FRAME_SIZE, long style = SYMBOL_CRUMBSVIEWER_FRAME_STYLE );

    /// Destructor
    ~CrumbsViewer_Frame();

    /// Initialises member variables
    void Init();

    /// Creates the controls and sizers
    void CreateControls();

////@begin CrumbsViewer_Frame event handler declarations

    /// wxEVT_COMMAND_BUTTON_CLICKED event handler for ID_CRUMBS_BUTTON_SEARCH_HELP
    void OnCrumbsButtonSearchHelpClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_BUTTON_CLICKED event handler for ID_CRUMBS_BUTTON_CLEAR_SEARCH
    void OnCrumbsButtonClearSearchClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_BUTTON_CLICKED event handler for ID_CRUMBS_BUTTON_SEARCH
    void OnCrumbsButtonSearchClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_BUTTON_CLICKED event handler for ID_CRUMBS_BUTTON_ALL_SEARCH_TABLES
    void OnCrumbsButtonAllSearchTablesClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_BUTTON_CLICKED event handler for ID_CRUMBS_BUTTON_CLEAR_SEARCH_TABLES
    void OnCrumbsButtonClearSearchTablesClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_COMBOBOX_SELECTED event handler for ID_CRUMBS_COMBO_PREVIOUS_SEARCH
    void OnCrumbsComboPreviousSearchSelected( wxCommandEvent& event );

    /// wxEVT_COMMAND_LISTBOX_SELECTED event handler for ID_CRUMBS_LISTBOX_COLLECTION
    void OnCrumbsListboxCollectionSelected( wxCommandEvent& event );

    /// wxEVT_COMMAND_BUTTON_CLICKED event handler for ID_CRUMBS_BUTTON_RESULTS_FIRST
    void OnCrumbsButtonResultsFirstClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_BUTTON_CLICKED event handler for ID_CRUMBS_BUTTON_RESULTS_PREV
    void OnCrumbsButtonResultsPrevClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_BUTTON_CLICKED event handler for ID_CRUMBS_BUTTON_RESULTS_NEXT
    void OnCrumbsButtonResultsNextClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_BUTTON_CLICKED event handler for ID_CRUMBS_BUTTON_RESULTS_LAST
    void OnCrumbsButtonResultsLastClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_BUTTON_CLICKED event handler for ID_CRUMBS_BUTTON_VIEW_FIRST
    void OnCrumbsButtonViewFirstClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_BUTTON_CLICKED event handler for ID_CRUMBS_BUTTON_VIEW_PREV
    void OnCrumbsButtonViewPrevClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_TEXT_ENTER event handler for ID_TEXTCTRL
    void OnTextctrlViewEnter( wxCommandEvent& event );

    /// wxEVT_COMMAND_BUTTON_CLICKED event handler for ID_CRUMBS_BUTTON_VIEW_NEXT
    void OnCrumbsButtonViewNextClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_BUTTON_CLICKED event handler for ID_CRUMBS_BUTTON_VIEW_LAST
    void OnCrumbsButtonViewLastClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_COMBOBOX_SELECTED event handler for ID_COMBOBOX
    void OnComboboxWebViewSelected( wxCommandEvent& event );

    /// wxEVT_COMMAND_BUTTON_CLICKED event handler for ID_CRUMBS_BUTTON_TEST
    void OnCrumbsButtonTestClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_CRUMBS_MENU_DATABASE_BUILD_DB
    void OnCrumbsMenuDatabaseBuildDbClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_CRUMBS_MENU_DATABASE_CREATE_PACKAGE
    void OnCrumbsMenuDatabaseCreatePackageClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_CRUMBS_MENU_DATABASE_LOAD_UPDATE
    void OnCrumbsMenuDatabaseLoadUpdateClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for wxID_ABOUT
    void OnAboutClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_MENUITEM_SEARCH_HELP
    void OnMenuitemSearchHelpClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_MENUITEM_FILETOOLS_LIST_CONSECUTIVE
    void OnMenuitemFiletoolsListConsecutiveClick( wxCommandEvent& event );

////@end CrumbsViewer_Frame event handler declarations

////@begin CrumbsViewer_Frame member function declarations

    /// Retrieves bitmap resources
    wxBitmap GetBitmapResource( const wxString& name );

    /// Retrieves icon resources
    wxIcon GetIconResource( const wxString& name );
////@end CrumbsViewer_Frame member function declarations

    /// Should we show tooltips?
    static bool ShowToolTips();

////@begin CrumbsViewer_Frame member variables
    wxTextCtrl* m_textcontrolSearch;
    wxCheckListBox* m_checkListBoxSearchDB;
    wxComboBox* m_comboSearchLimit;
    wxComboBox* m_comboPreviousSearch;
    wxTextCtrl* m_textctrlCollectionComment;
    wxListBox* m_listboxResults;
    wxButton* m_buttonViewFirst;
    wxTextCtrl* m_textViewCurent;
    wxButton* m_buttonViewLast;
    wxComboBox* m_comboViewCurrentTable;
    wxWebView* m_webDocument;
////@end CrumbsViewer_Frame member variables
    
    /////////////////////////////////
    //// UNMANAGED SECTION
    /////////////////////////////////
    
    void vLoadFromIniFile(wxString xsFileName);
    void vSaveToIniFile(wxString xsFileName);
    
    void vIniFileAppendUpdatePackage(wxString xsINIFileName, wxString &xsUpdatePackage);
    int nIniFileCheckUpdatePackageApplied(wxString xsINIFileName, wxString &xsUpdatePackage);
    
    void vCheckForLocalUpdates();
    
    void vSetCollection(CVCollection &tCollection);
    
    wxString sUpdateTableInfo(CVTable & tTable);
    void vSetCurrentTable(int nTable);
    

    void vSetNewPage(int nTable, long lIndex);
    void vRefreshWebView();
    void vRefreshSearchResults();
    void vSelectResult( int nResultIndex, bool bRelative );
    
    void vSearchNow(bool bUpdateHistory);
    
    CVTable * pGetTable(int nTableIndex);
    
    //database functions
    wxString sDatabaseUpdateTables(int nTableIndex,wxDateTime & xDateAnchor,   bool bOnlyMissing=false);
    void vDatabasePerformSearch(wxString &xsSearchString, int nTableIndex, int nLimit, CVCollection &tCollectionResults);
    
    void vDatabaseCreateUpdatePackage(wxString &xsFileName, wxArrayString &tAllFiles);
    wxString sDatabaseApplyUpdatePackage(wxString &xsFileName, wxString & xsBasePath);
    
    std::vector<CVTable>  m_vTables;
    
    int m_nCurrentTable;  //zero based
    wxString m_xsDatabaseFileName;
    
    CVCollection m_tCollectionResults;
    
    CVSearchHelp_frame *m_frameSearchHelp;
    
    wxString m_xsProgramPath;

    
    ////////////////////////////////
    /// END OF UNMANAGED SECTION
    ////////////////////////////////
};


#endif
    // _CRUMBSVIEWER_FRAME_H_
